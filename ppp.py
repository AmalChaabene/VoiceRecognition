#! /usr/bin/env python
#
# GUI module generated by PAGE version 4.9
# In conjunction with Tcl version 8.6
#    Apr 22, 2018 12:49:11 AM
import sys
from tkinter import filedialog
import winsound
import pylab as plt
import numpy as np
import wave
import PIL
from keras.models import load_model
import librosa
import os
from sklearn.model_selection import train_test_split
from keras.utils import to_categorical
import numpy as np
from tqdm import tqdm
import matplotlib.pyplot as plt
import librosa.display


try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = 0
except ImportError:
    import tkinter.ttk as ttk
    py3 = 1



def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Tk()
    top = New_Toplevel_1 (root)
    root.mainloop()

w = None
def create_New_Toplevel_1(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = Toplevel (root)
    top = New_Toplevel_1 (w)
    return (w, top)

def destroy_New_Toplevel_1():
    global w
    w.destroy()
    w = None


class New_Toplevel_1:
    file=""
    modelFinal = load_model('model.h5')
    def __init__(self, top=None):
        
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#1293A6'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#1293A6' # X11 color: 'gray85'
        _ana1color = '#1293A6' # X11 color: 'gray85' 
        _ana2color = '#1293A6' # X11 color: 'gray85' 
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("363x444+887+150")
        top.title("Application de reconnaissance vocale")
        top.configure(background="#1293A6")



        self.Button1 = Button(top,command=self.browsefunc)
        self.Button1.place(relx=0.14, rely=0.09, height=44, width=257)
        self.Button1.configure(background="#E5F9FC")
        self.Button1.configure(disabledforeground="#a3a3a3")
        self.Button1.configure(foreground="#809210")
        self.Button1.configure(highlightbackground="#1293A6")
        self.Button1.configure(highlightcolor="black")
        self.Button1.configure(pady="0")
        self.Button1.configure(text='''Choisir une voix''')
        self.Button1.configure(width=257)

        self.Button2 = Button(top)
        self.Button2.place(relx=0.14, rely=0.25, height=44, width=257)
        self.Button2.configure(background="#E5F9FC")
        self.Button2.configure(disabledforeground="#a3a3a3")
        self.Button2.configure(foreground="#809210")
        self.Button2.configure(highlightbackground="#1293A6")
        self.Button2.configure(highlightcolor="black")
        self.Button2.configure(pady="0")
        self.Button2.configure(text='''Afficher MFCC''')
        self.Button2.configure(width=257)

        self.Button3 = Button(top)
        self.Button3.place(relx=0.14, rely=0.41, height=44, width=257)
        self.Button3.configure(background="#E5F9FC")
        self.Button3.configure(disabledforeground="#a3a3a3")
        self.Button3.configure(foreground="#809210")
        self.Button3.configure(highlightbackground="#1293A6")
        self.Button3.configure(highlightcolor="black")
        self.Button3.configure(pady="0")
        self.Button3.configure(text='''Reconnaitre la voix''')
        self.Button3.configure(width=257)

        self.TLabel1 = ttk.Label(top)
        self.TLabel1.place(relx=0.06, rely=0.68, height=39, width=66)
        self.TLabel1.configure(background="#1293A6")
        self.TLabel1.configure(foreground="#000000")
        self.TLabel1.configure(relief=FLAT)
        self.TLabel1.configure(text='''Resultat''')
        self.TLabel1.configure(width=66)

        self.Resultat = Text(top)
        self.Resultat.place(relx=0.25, rely=0.63, relheight=0.14, relwidth=0.4)
        self.Resultat.configure(background="white")
        self.Resultat.configure(font="TkTextFont")
        self.Resultat.configure(foreground="black")
        self.Resultat.configure(highlightbackground="#1293A6")
        self.Resultat.configure(highlightcolor="black")
        self.Resultat.configure(insertbackground="black")
        self.Resultat.configure(selectbackground="#c4c4c4")
        self.Resultat.configure(selectforeground="black")
        self.Resultat.configure(undo="1")
        self.Resultat.configure(width=144)
        self.Resultat.configure(wrap=WORD)

        self.Button4 = Button(top)
        self.Button4.place(relx=0.08, rely=0.88, height=34, width=137)
        self.Button4.configure(background="#E5F9FC")
        self.Button4.configure(disabledforeground="#a3a3a3")
        self.Button4.configure(foreground="#809210")
        self.Button4.configure(highlightbackground="#1293A6")
        self.Button4.configure(highlightcolor="black")
        self.Button4.configure(pady="0")
        self.Button4.configure(text='''Les probabilit√©s''')
        self.Button4.configure(width=137)

        self.menubar = Menu(top,font="TkMenuFont",bg='#c5edeb',fg=_fgcolor)
        top.configure(menu = self.menubar)



        self.Button5 = Button(top)
        self.Button5.place(relx=0.55, rely=0.88, height=34, width=137)
        self.Button5.configure(background="#E5F9FC")
        self.Button5.configure(disabledforeground="#a3a3a3")
        self.Button5.configure(foreground="#809210")
        self.Button5.configure(highlightcolor="#809210")
        self.Button5.configure(pady="0")
        self.Button5.configure(text='''Quitter''')

    def browsefunc(self):
        
        filename = filedialog.askopenfilename()
        winsound.PlaySound(filename, winsound.SND_ALIAS)
        self.file=filename




    
        







if __name__ == '__main__':
    vp_start_gui()


